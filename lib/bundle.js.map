{"version":3,"sources":["webpack:///webpack/bootstrap b59102552f5c381d85ed","webpack:///./lib/bomberdude.js","webpack:///./lib/gameview.js","webpack:///./lib/computer.js","webpack:///./lib/gamemap.js","webpack:///./lib/tile.js","webpack:///./lib/flame.js","webpack:///./lib/character.js","webpack:///./lib/bomb.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,EAAC;;;;;;;;AC1BD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,kBAAiB,sBAAsB;AACvC,oBAAmB,yBAAyB;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACxEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAiB,QAAQ;AACzB;AACA,oBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA,uBAAsB,aAAa;AACnC,uBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,uBAAuB;AACxC,oBAAmB,0BAA0B;AAC7C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;;AAEA,QAAO;AACP;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAU;AACV;;AAEA;AACA;AACA;;AAEA,WAAU;AACV;;;;;AAKA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;;AAEL,MAAK;;AAEL;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,8BAA8B,EAAE;AACvD,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,uBAAuB;AACxC,oBAAmB,0BAA0B;AAC7C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AChcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;;AAIA;AACA,kDAAiD,gBAAgB,EAAE;AACnE;;;AAGA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,kBAAkB,EAAE;AAClE,6CAA4C,iBAAiB,EAAE;AAC/D;;;AAGA;AACA;AACA;AACA;;;;;;;;AAQA;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,IAAG;AACH;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;AAGA;;;;;;;AC/SA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b59102552f5c381d85ed\n **/","const GameView = require('./gameview');\nconst GameMap = require(\"./gamemap\");\nconst gameMenu = new Image();\ngameMenu.src = './img/menu.png';\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  let canvasEl = document.getElementsByTagName(\"canvas\")[0];\n\n  canvasEl.width = GameMap.DIM_X;\n  canvasEl.height = GameMap.DIM_Y;\n\n  let ctx = canvasEl.getContext(\"2d\");\n  gameMenu.onload =  () => {\n    ctx.drawImage(gameMenu, 0, 0, 272, 228, 0, 0, 272, 213);\n  };\n\n  document.onkeydown = (e) =>{\n    if (e.keyCode === 13) {\n      var map = new GameMap(ctx);\n      var view = new GameView(ctx, map);\n      view.start();\n    }\n  };\n\n\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomberdude.js\n ** module id = 0\n ** module chunks = 0\n **/","const Computer = require('./computer');\n\nvar GameView = function (ctx, gameMap) {\n  this.context = ctx;\n  this.gameMap = gameMap;\n  this.character1 = this.gameMap.addCharacter1();\n  this.character2 = this.gameMap.addCharacter2();\n  // this.computer = new Computer(this.character2);\n};\n\nGameView.prototype.bindKeyHandlers = function (character, character2) {\n  onkeydown = function (e) {\n    if (e.key ==='v') {\n      character.dropBomb();\n    }\n\n    if (e.key === 'w') {\n      character.moveUp();\n    }\n\n    if (e.key === 's') {\n      character.moveDown();\n    }\n\n    if (e.key === 'd') {\n      character.moveRight();\n    }\n\n    if (e.key === 'a') {\n      character.moveLeft();\n    }\n    if (e.key ==='p') {\n      character2.dropBomb();\n    }\n\n    if (e.key === 'i') {\n      character2.moveUp();\n    }\n\n    if (e.key === 'k') {\n      character2.moveDown();\n    }\n\n    if (e.key === 'l') {\n      character2.moveRight();\n    }\n\n    if (e.key === 'j') {\n      character2.moveLeft();\n    }\n\n  };\n  onkeyup = function (e) {\n    // if (e.key === 'a' || e.key === 'd') {\n    //   character.move([0,0]);\n    // }\n    if (e.key === 'w') {\n      character.stopMoveUp();\n    }\n    if (e.key === 's') {\n      character.stopMoveDown();\n    }\n    if (e.key === 'd') {\n      character.stopMoveRight();\n    }\n    if (e.key === 'a') {\n      character.stopMoveLeft();\n    }\n\n    if (e.key === 'i') {\n      character2.stopMoveUp();\n    }\n    if (e.key === 'k') {\n      character2.stopMoveDown();\n    }\n    if (e.key === 'l') {\n      character2.stopMoveRight();\n    }\n\n    if (e.key === 'j') {\n      character2.stopMoveLeft();\n    }\n\n  };\n};\n\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers(this.character1, this.character2);\n\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function (time) {\n  const timeDelta = time - this.lastTime;\n  this.gameMap.step(time);\n  this.gameMap.drawFrame(this.context);\n  this.lastTime = time;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\n\n\nGameView.MOVES1 = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n  \"v\": 'bomb',\n};\n\nGameView.MOVES2 = {\n  \"i\": [ 0, -1],\n  \"j\": [-1,  0],\n  \"k\": [ 0,  1],\n  \"l\": [ 1,  0],\n  \"p\": 'bomb'\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameview.js\n ** module id = 2\n ** module chunks = 0\n **/","\n\nvar Computer = function (character) {\n  this.character = character;\n  this.gameMap = character.gameMap;\n  this.inDanger = false;\n  this.beginRoutine();\n};\n\nComputer.prototype.walkRight = function () {\n  this.character.moveRight();\n};\n\nComputer.prototype.walkLeft = function () {\n  this.character.moveLeft();\n};\n\nComputer.prototype.walkTop = function () {\n  this.character.moveTop();\n};\n\nComputer.prototype.walkDown = function () {\n  this.character.moveDown();\n};\n\nComputer.prototype.beginRoutine = function () {\n\n};\n\nComputer.prototype.findDestination = function () {\n  let gameTiles = this.gameMap.tiles;\n  for (var i = 0; i < gameTiles.length; i++) {\n    for (var j = 0; j < gameTiles[0].length; j++) {\n\n    }\n  }\n};\n\nComputer.prototype.findValidDirection = function () {\n  if (!this.character.isBottomPathBlocked()) {\n    // while (!this.character.isBottomPathBlocked()) {\n      this.walkDown();\n    // }\n  } else if (!this.character.isTopPathBlocked()) {\n    // while (!this.character.isTopPathBlocked()) {\n      this.walkTop();\n    // }\n  } else if (!this.character.isRightPathBlocked()) {\n    // while (!this.character.isRightPathBlocked()) {\n      this.walkRight();\n    // }\n  } else if (!this.character.isLeftPathBlocked()) {\n    // while (!this.character.isLeftPathBlocked()) {\n      this.walkLeft();\n    // }\n  } else {\n    this.findValidDirection();\n  }\n};\n\nComputer.prototype.avoidBomb = function () {\n\n};\n\nComputer.prototype.findBlock = function () {\n\n};\n\nComputer.prototype.startPlay = function () {\n  this.findValidDirection();\n};\n\nmodule.exports = Computer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/computer.js\n ** module id = 3\n ** module chunks = 0\n **/","const Tile = require('./tile');\nconst Flame = require('./flame');\nconst Character = require('./character');\n\nvar bombImage = new Image();\nbombImage.src = './img/bomb.png';\nvar bomber = new Image();\nbomber.src = './img/bomber.gif';\nvar bomberInvinc = new Image();\nbomberInvinc.src = './img/bomber-invinc.png';\nvar bomber2Invinc = new Image();\nbomber2Invinc.src = './img/bomber2-invinc.png';\nvar bomber2 = new Image();\nbomber2.src = './img/bomber2.gif';\nvar tile = new Image();\ntile.src = './img/tile.png';\nvar wall = new Image();\nwall.src = './img/wall.png';\nvar flameImage = new Image();\nflameImage.src = './img/flame.gif';\nvar blockImage = new Image();\nblockImage.src = './img/block.png';\nvar flamePowerup = new Image();\nflamePowerup.src = './img/flamePowerup.png';\nvar bombPowerup = new Image();\nbombPowerup.src = './img/bombPowerup.png';\nvar speedPowerup = new Image();\nspeedPowerup.src = './img/speedPowerup.png';\nvar scorebarAvatars = new Image();\nscorebarAvatars.src = './img/scorebar-avatars.gif';\nvar flameCenter = new Image();\nflameCenter.src = './img/flamecenter.png';\nvar flameRight = new Image();\nflameRight.src = './img/flameright.png';\nvar flameTop = new Image();\nflameTop.src = './img/flametop.png';\nvar flameLeft = new Image();\nflameLeft.src = './img/flameleft.png';\nvar flameBottom = new Image();\nflameBottom.src = './img/flamebottom.png';\n\nvar flameImages = {\n  'center': flameCenter,\n  'left': flameLeft,\n  'top': flameTop,\n  'right': flameRight,\n  'bottom': flameBottom\n};\n\nvar player1 = {\n  'up': 4,\n  'right': 58,\n  'down': 114,\n  'left': 169\n};\n\nvar player2 = {\n  'up': 4,\n  'right': 58,\n  'down': 114,\n  'left': 169\n};\n\nvar GameMap = function () {\n  this.tiles = [];\n  this.characters = [];\n  this.tileSize = 16;\n  this.initialize();\n  this.generateBlocks();\n  this.bombs = [];\n  this.flames = [];\n  this.powerups = [];\n  this.time = 0;\n  this.p1Lives = 3;\n  this.p2Lives = 3;\n};\n\nGameMap.DIM_X = 272;\n\nGameMap.DIM_Y = 228;\n\nGameMap.prototype.initialize = function () {\n  for (var i = 0; i < 13; i++) {\n    this.tiles.push([]);\n    for (var j = 0; j < 17; j++) {\n      if (i === 0 || j === 0 || i === 12 || j === 16) {\n\n        let wallTile = new Tile([j, i], 'wall');\n        this.tiles[i].push(wallTile);\n      } else if (i % 2 === 0 && j % 2 === 0) {\n\n        let wallTile = new Tile([j, i], 'wall');\n        this.tiles[i].push(wallTile);\n      } else {\n\n        let pathTile = new Tile([j, i]);\n        this.tiles[i].push(pathTile);\n      }\n\n    }\n  }\n};\n\nGameMap.prototype.step = function (time) {\n  this.characters.forEach( (character) => {\n    character.move();\n  });\n  this.time = Math.floor(time);\n};\n\nGameMap.prototype.addCharacter1 = function () {\n  var character1 = new Character([18, 18], this, 1);\n  this.characters.push(character1);\n  return character1;\n};\n\nGameMap.prototype.addCharacter2 = function () {\n  var character2 = new Character([242, 18], this, 2);\n  this.characters.push(character2);\n  return character2;\n};\n\nGameMap.prototype.addBomb = function (bomb) {\n  this.bombs.push(bomb);\n};\n\nGameMap.prototype.renderBombs = function (ctx) {\n  this.bombs.forEach( (bomb, index) => {\n    if (bomb.time <= bomb.explodeTime) {\n      let sx = bomb.frame * 16;\n      ctx.drawImage(bombImage, sx, 0, 16, 16, bomb.mapPos[0] * this.tileSize, bomb.mapPos[1] * this.tileSize + 20, 16, 16);\n    } else {\n      this.removeBomb(index);\n    }\n  });\n};\n\nGameMap.prototype.renderCharacters = function (ctx) {\n  for (var i = 0; i < this.characters.length; i++) {\n    let character = this.characters[i];\n    let characterImage;\n    let sy;\n    if (this.characters[i].playerNum === 1) {\n      if (character.invincible) {\n        characterImage = bomberInvinc;\n        sy = this.time % 2 === 0 ? 23 : 0;\n      }else {\n        characterImage = bomber;\n        sy = 23;\n      }\n    } else if (this.characters[i].playerNum === 2) {\n      if (character.invincible) {\n        characterImage = bomber2Invinc;\n        sy = this.time % 2 === 0 ? 23 : 0;\n      } else {\n        characterImage = bomber2;\n        sy = 23;\n      }\n    }\n\n    let sx = character.frame * 17 + player1[character.faceDirection()];\n    ctx.drawImage(characterImage, sx, 0, 17, sy, character.pos[0]-2 ,character.pos[1] + 8, 17, 23);\n  }\n};\n\nGameMap.prototype.renderFlames = function (ctx) {\n  this.flames.forEach( (flame, index) => {\n    if (flame.time <= flame.extinguishTime) {\n      let sx = flame.last ? 16 : 0;\n      let sy = flame.frame * 16;\n\n      ctx.drawImage(flameImages[flame.orientation], sx, sy, 16, 16, flame.mapPos[0] * this.tileSize, flame.mapPos[1] * this.tileSize + 20, 16, 16);\n    } else {\n      this.removeFlame(index);\n    }\n  });\n};\n\nGameMap.prototype.renderScoreBar = function (ctx) {\n  ctx.drawImage(scorebarAvatars, 0, 0, 13, 11, 5,5, 13, 11);\n  ctx.drawImage(scorebarAvatars, 13, 0, 13, 11, 238 ,5, 13, 11);\n\n  ctx.strokeText(`x ${this.p1Lives}`,20, 14);\n  ctx.strokeText(`x ${this.p2Lives}`,253, 14);\n};\n\nGameMap.prototype.removeBomb = function (index) {\n  this.bombs[index].explode();\n  this.bombs.splice(index, 1);\n};\n\nGameMap.prototype.renderMap = function (ctx) {\n  var size = 16;\n  let xCoord = 0;\n  let yCoord = 20;\n\n  for (var i = 0; i < this.tiles.length; i++) {\n    for (var j = 0; j < this.tiles[1].length; j++) {\n      if (this.tiles[i][j].type === 'wall') {\n        ctx.drawImage(wall, xCoord, yCoord);\n      } else if (this.tiles[i][j].type === 'block') {\n        let block = this.tiles[i][j];\n        let sx = block.frame * size;\n        ctx.drawImage(blockImage, sx, 0, 16, 16, xCoord, yCoord, 16, 16);\n      } else if (this.tiles[i][j].powerup === 'flame') {\n        ctx.drawImage(flamePowerup, xCoord, yCoord);\n      } else if (this.tiles[i][j].powerup === 'bomb') {\n        ctx.drawImage(bombPowerup, xCoord, yCoord);\n\n      } else if (this.tiles[i][j].powerup === 'speed') {\n        ctx.drawImage(speedPowerup, xCoord, yCoord);\n\n      } else {\n        ctx.drawImage(tile, xCoord, yCoord);\n      }\n      xCoord += size;\n    }\n    yCoord += size;\n    xCoord = 0;\n  }\n};\n\n\n\nGameMap.prototype.isPath = function (pos) {\n  if (this.tiles[pos[1]][pos[0]].type === 'path' ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nGameMap.prototype.isPowerup = function (pos) {\n  if (this.tiles[pos[1]][pos[0]].powerup) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nGameMap.prototype.isUnsafe = function (pos) {\n  return !this.tiles[pos[0]][pos[1]].safe;\n};\n\nGameMap.prototype.isBomb = function (pos) {\n  let posX = pos[0];\n  let posY = pos[1];\n  let isBomb = false;\n  this.bombs.forEach( (bomb, index) => {\n    let bombX = bomb.mapPos[0];\n    let bombY = bomb.mapPos[1];\n    if (posX === bombX && posY === bombY) {\n      isBomb = index;\n    }\n  });\n  return isBomb;\n};\n\nGameMap.prototype.isBlock = function (pos) {\n  return this.tiles[pos[1]][pos[0]].type === 'block';\n};\n\nGameMap.prototype.destroyBlock = function (pos) {\n  this.tiles[pos[1]][pos[0]].animateDestroy();\n};\n\n\nGameMap.prototype.isLeftPathUnsafe = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[0] -= 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isUnsafe([mapCenterPos[1], mapCenterPos[0]]);\n};\n\nGameMap.prototype.isRightPathUnsafe = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[0] += 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isUnsafe([mapCenterPos[1], mapCenterPos[0]]);\n};\n\nGameMap.prototype.isTopPathUnsafe = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[1] -= 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isUnsafe([mapCenterPos[1], mapCenterPos[0]]);\n};\n\nGameMap.prototype.isBottomPathUnsafe = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[1] += 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isUnsafe([mapCenterPos[1], mapCenterPos[0]]);\n};\n\nGameMap.prototype.isLeftPathPowerup = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[0] -= 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isPowerup(mapCenterPos);\n};\n\nGameMap.prototype.isRightPathPowerup = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[0] += 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return this.isPowerup(mapCenterPos);\n};\n\nGameMap.prototype.isTopPathPowerup = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[1] -= 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n  return this.isPowerup(mapCenterPos);\n};\n\nGameMap.prototype.isBottomPathPowerup = function (character) {\n  let centerPos = character.centerPos();\n  centerPos[1] += 6;\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return {isPowerup: this.isPowerup(mapCenterPos), pos: mapCenterPos };\n};\n\nGameMap.prototype.isOnPowerup = function (character) {\n  let centerPos = character.centerPos();\n  let mapCenterPos = character.getMapPos(centerPos);\n\n  return {isPowerup: this.isPowerup(mapCenterPos), pos: mapCenterPos };\n};\n\n\n\n\nGameMap.prototype.makeFlame = function (pos, orientation, last) {\n  let gameTile = this.tiles[pos[1]][pos[0]];\n  gameTile.safe = false;\n\n\n  if (gameTile.type === 'block') {\n    if (gameTile.powerup === null) {\n      gameTile.type = 'path';\n    } else if (gameTile.type === 'flame') {\n\n    } else if (gameTile.type === 'bomb') {\n\n    }\n  } else if (gameTile.type === 'path' ) {\n    if (gameTile.powerup !== null) {\n      gameTile.powerup = null;\n    }\n  }\n\n  let flame = new Flame(pos, this, orientation, last);\n  this.flames.push(flame);\n};\n\nGameMap.prototype.removeFlame = function (index) {\n  this.flames[index].extinguish();\n  this.tiles[this.flames[index].mapPos[1]][this.flames[index].mapPos[0]].safe = true;\n  this.flames.splice(index, 1);\n};\n\nGameMap.prototype.checkCharacter = function () {\n  this.characters.forEach( (character, index) => {\n    if ((this.isTopPathUnsafe(character) || this.isRightPathUnsafe(character) ||\n    this.isBottomPathUnsafe(character) || this.isLeftPathUnsafe(character)) && !character.invincible) {\n      this.removeCharacter(index);\n    }\n    let powerupObj = this.isOnPowerup(character);\n    if (powerupObj.isPowerup) {\n      this.pickupPowerup(character, powerupObj.pos);\n    }\n  });\n};\n\nGameMap.prototype.pickupPowerup = function (character, pos) {\n  if (this.tiles[pos[1]][pos[0]].powerup === 'flame') {\n    character.strength += 1;\n  } else if (this.tiles[pos[1]][pos[0]].powerup === 'bomb') {\n    character.numBombs +=1;\n  } else if (this.tiles[pos[1]][pos[0]].powerup === 'speed' && character.speed < 1.5) {\n    character.speed += 0.1;\n  }\n  this.tiles[pos[1]][pos[0]].powerup = null;\n};\n\nGameMap.prototype.removeCharacter = function (index) {\n  let character = this.characters[index];\n  if (character.lives > 0) {\n    character.lives -= 1;\n    if (character.playerNum === 1) {\n      this.p1Lives -= 1;\n    } else {\n      this.p2Lives -= 1;\n    }\n    this.respawnCharacter(character, index);\n  } else {\n    this.characters.splice(index, 1);\n  }\n};\n\nGameMap.prototype.respawnCharacter  = function (character, index) {\n  this.characters.splice(index, 1);\n  setTimeout( () => {\n    character.invincible = true;\n    this.characters.push(character);\n    setTimeout( () => { character.invincible = false; }, 2000);\n  }, 1000);\n};\n\nGameMap.prototype.drawFrame = function (ctx) {\n  ctx.clearRect(0, 0, GameMap.DIM_X, GameMap.DIM_Y);\n  this.checkCharacter();\n  this.renderScoreBar(ctx);\n  this.renderMap(ctx);\n  this.renderBombs(ctx);\n  this.renderFlames(ctx);\n  this.renderCharacters(ctx);\n};\n\nGameMap.prototype.generateBlocks = function () {\n  for (var i = 0; i < this.tiles.length; i++) {\n    for (var j = 0; j < this.tiles[i].length; j++) {\n      if ((i < 3 && j < 3) || (j > 13 && i < 3)) {\n        continue;\n      } else if (this.tiles[i][j].type === 'path' && Math.random() < 0.5){\n        this.tiles[i][j].type = 'block';\n        let randomNum = Math.random();\n        if (randomNum < 0.15) {\n          this.tiles[i][j].powerup = 'flame';\n        } else if (randomNum > 0.4 && randomNum < 0.6) {\n          this.tiles[i][j].powerup = 'bomb';\n        } else if (randomNum > 0.7 && randomNum < 0.8) {\n          this.tiles[i][j].powerup = 'speed';\n        }\n      }\n    }\n  }\n};\n\n\nmodule.exports = GameMap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gamemap.js\n ** module id = 4\n ** module chunks = 0\n **/","var Tile = function (pos, type = 'path') {\n  this.pos = pos;\n  this.type = type;\n  this.safe = true;\n  this.powerup = null;\n  this.time = 0;\n  this.destroyTime = 200;\n  this.frame = 0;\n  // this.refreshIntervalId = null;\n};\n\nTile.prototype.destroy = function () {\n  if (this.time >= this.destroyTime) {\n    clearInterval(this.refreshIntervalId);\n    this.type = 'path';\n  } else {\n    this.time += 80;\n    this.frame += 1;\n  }\n};\n\n\n\nTile.prototype.animateDestroy = function () {\n    this.refreshIntervalId = setInterval( () => { this.destroy(); }, 80 );\n};\n\n\nmodule.exports = Tile;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/tile.js\n ** module id = 5\n ** module chunks = 0\n **/","var Flame = function (mapPos, gameMap, orientation, last) {\n  this.mapPos = mapPos;\n  this.gameMap = gameMap;\n  this.orientation = orientation;\n  this.last = last;\n  this.time = 0;\n  this.frame = 0;\n  this.extinguishTime = 500;\n  this.refreshIntervalId = setInterval( ()=> { this.time += 100; }, 100 );\n  this.frameIntervalId = setInterval( ()=> { this.frame += 1; }, 80 );\n};\n\n\nFlame.prototype.extinguish = function () {\n  clearInterval(this.refreshIntervalId);\n  clearInterval(this.frameIntervalId);\n};\n\n\n\n\n\n\n\nmodule.exports = Flame;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/flame.js\n ** module id = 6\n ** module chunks = 0\n **/","const Bomb = require('./bomb');\n\nvar Character = function (pos, gameMap, playerNum) {\n  this.pos = pos;\n  this.gameMap = gameMap;\n  this.playerNum = playerNum;\n  this.invincible = false;\n  this.lives = 3;\n  this.vel = [0,0];\n  this.speed = 1;\n  this.strength = 1;\n  this.numBombs = 1;\n  this.activeBombs = 0;\n  this.moving = false;\n  this.facing = 'down';\n  this.actualVel = [0,0];\n  this.frame = 0;\n};\n\nCharacter.prototype.incrementFrame = function () {\n  if (this.frame < 2) {\n    this.frame += 1;\n  } else {\n    this.frame = 0;\n  }\n};\n\nCharacter.prototype.startMoving = function () {\n  if (!this.moving) {\n    this.moving = true;\n    this.intervalId = setInterval(() => {\n      this.incrementFrame();\n    }, 150 / this.speed);\n  }\n};\n\nCharacter.prototype.stopMoving = function () {\n  if (this.vel[0] === 0 && this.vel[1] === 0 && this.moving) {\n    this.moving = false;\n    clearInterval(this.intervalId);\n    this.frame = 0;\n  }\n};\n\nCharacter.prototype.getMapPos = function (pos) {\n  let mapX = Math.floor(pos[0] / this.gameMap.tileSize);\n  let mapY = Math.floor(pos[1] / this.gameMap.tileSize);\n  return [mapX, mapY];\n};\n\nCharacter.prototype.getMapBombPos = function () {\n  let mapX = Math.floor((this.pos[0] + 6) / this.gameMap.tileSize);\n  let mapY = Math.floor((this.pos[1] + 6) / this.gameMap.tileSize);\n  return [mapX, mapY];\n};\n\nCharacter.prototype.topRightPos = function () {\n  let topRightPos = [this.pos[0], this.pos[1]];\n  topRightPos[0] += 12;\n  return topRightPos;\n};\n\nCharacter.prototype.bottomRightPos = function () {\n  let bottomRightPos = [this.pos[0], this.pos[1]];\n  bottomRightPos[0] += 12;\n  bottomRightPos[1] += 12;\n  return bottomRightPos;\n};\n\n\nCharacter.prototype.bottomLeftPos = function () {\n  let bottomLeftPos = [this.pos[0], this.pos[1]];\n  bottomLeftPos[1] += 12;\n  return bottomLeftPos;\n};\n\nCharacter.prototype.centerPos = function () {\n  let centerPos = [this.pos[0], this.pos[1]];\n  centerPos[0] += 7;\n  centerPos[1] += 7;\n  return centerPos;\n};\n\nCharacter.prototype.isLeftPathBlocked = function () {\n  let topLeftPos = [this.pos[0], this.pos[1]];\n  topLeftPos[0] -= 1 * this.speed;\n  let topLeftMapPos = this.getMapPos(topLeftPos);\n\n  let bottomLeftPos = [this.bottomLeftPos()[0], this.bottomLeftPos()[1]];\n  bottomLeftPos[0] -= 1 * this.speed;\n  let bottomLeftMapPos = this.getMapPos(bottomLeftPos);\n\n  if (this.gameMap.isPath(topLeftMapPos) && this.gameMap.isPath(bottomLeftMapPos)) {\n    if (this.gameMap.isBomb(this.getMapBombPos(this.pos)) !== false) {\n      return false;\n    } else if (this.gameMap.isBomb(topLeftMapPos) !== false) {\n      return true;\n    }\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isRightPathBlocked = function () {\n  let topRightPos = [this.topRightPos()[0], this.topRightPos()[1]];\n  topRightPos[0] += 1 * this.speed;\n  let topRightMapPos = this.getMapPos(topRightPos);\n\n  let bottomRightPos = [this.bottomRightPos()[0], this.bottomRightPos()[1]];\n  bottomRightPos[0] += 1 * this.speed;\n  let bottomRightMapPos = this.getMapPos(bottomRightPos);\n\n  // let otherBottomRightPos = [this.bottomRightPos()[0], this.bottomRightPos()[1]];\n  // otherBottomRightPos [0] += 1;\n  // otherBottomRightPos [1] += 1;\n  // let otherBottomRightMapPos = this.getMapPos(otherBottomRightPos);\n\n  if (this.gameMap.isPath(topRightMapPos) && this.gameMap.isPath(bottomRightMapPos)) {\n    if (this.gameMap.isBomb(this.getMapBombPos(this.pos)) !== false) {\n      return false;\n    } else if (this.gameMap.isBomb(topRightMapPos) !== false) {\n      return true;\n    }\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isTopPathBlocked = function () {\n  let topLeftPos = [this.pos[0], this.pos[1]];\n  topLeftPos[1] -= 1 * this.speed;\n  let topLeftMapPos = this.getMapPos(topLeftPos);\n\n  let topRightPos = [this.topRightPos()[0], this.topRightPos()[1]];\n  topRightPos[1] -= 1 * this.speed;\n  let topRightMapPos = this.getMapPos(topRightPos);\n\n  if (this.gameMap.isPath(topLeftMapPos) && this.gameMap.isPath(topRightMapPos)) {\n    if (this.gameMap.isBomb(this.getMapBombPos(this.pos)) !== false) {\n      return false;\n    } else if (this.gameMap.isBomb(topLeftMapPos) !== false) {\n      return true;\n    }\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isBottomPathBlocked = function () {\n  let bottomLeftPos = [this.bottomLeftPos()[0], this.bottomLeftPos()[1]];\n  bottomLeftPos[1] += 1 * this.speed;\n  let bottomLeftMapPos = this.getMapPos(bottomLeftPos);\n\n  let bottomRightPos = [this.bottomRightPos()[0], this.bottomRightPos()[1]];\n  bottomRightPos[1] += 1 * this.speed;\n  let bottomRightMapPos = this.getMapPos(bottomRightPos);\n\n\n\n  if (this.gameMap.isPath(bottomLeftMapPos) && this.gameMap.isPath(bottomRightMapPos) ) {\n    if (this.gameMap.isBomb(this.getMapBombPos(this.pos)) !== false) {\n      return false;\n    } else if (this.gameMap.isBomb(bottomLeftMapPos) !== false ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.move = function (move) {\n  if (move === 'bomb') {\n    return this.dropBomb();\n  }\n\n  let currentPos = this.pos;\n  let deltaX = this.vel[0];\n  let deltaY = this.vel[1];\n  let futurePos;\n\n  if (this.isLeftPathBlocked() && this.isTopPathBlocked() && this.isRightPathBlocked()) {\n    if (deltaX > 0 || deltaX < 0) {\n      deltaX = 0;\n    }\n  } else if (this.isLeftPathBlocked() && this.isTopPathBlocked() && this.isBottomPathBlocked()) {\n    if (deltaY > 0 || deltaY < 0) {\n      deltaY = 0;\n    }\n  } else if (this.isLeftPathBlocked() && this.isTopPathBlocked()) {\n    if (deltaX < 0) {\n      deltaX = 0;\n    }\n    if (deltaY < 0) {\n      deltaY = 0;\n    }\n  } else if (this.isTopPathBlocked() && this.isRightPathBlocked()) {\n    if (deltaX > 0) {\n      deltaX = 0;\n    }\n    if (deltaY < 0) {\n      deltaY = 0;\n    }\n  } else if (this.isRightPathBlocked() && this.isBottomPathBlocked()) {\n    if (deltaX > 0) {\n      deltaX = 0;\n    }\n    if (deltaY > 0) {\n      deltaY = 0;\n    }\n  } else if (this.isBottomPathBlocked() && this.isLeftPathBlocked()) {\n    if (deltaX < 0) {\n      deltaX = 0;\n    }\n    if (deltaY > 0) {\n      deltaY = 0;\n    }\n  } else if (this.isLeftPathBlocked() && deltaX < 0) {\n    deltaX = 0;\n  } else if (this.isRightPathBlocked() && deltaX > 0) {\n    deltaX = 0;\n  } else if (this.isTopPathBlocked() && deltaY < 0) {\n    deltaY = 0;\n  } else if (this.isBottomPathBlocked() && deltaY > 0) {\n    deltaY = 0;\n  }\n  this.actualVel = [deltaX, deltaY];\n  futurePos = [currentPos[0] + deltaX, currentPos[1] + deltaY];\n  this.pos = futurePos;\n};\n\nCharacter.prototype.faceDirection = function () {\n  if (this.actualVel[0] < 0) {\n    this.facing = 'left';\n    return 'left';\n  } else if (this.actualVel[0] > 0) {\n    this.facing = 'right';\n\n    return 'right';\n  } else if (this.actualVel[1] < 0) {\n    this.facing = 'up';\n\n    return 'up';\n  } else if (this.actualVel[1] > 0) {\n    this.facing = 'down';\n    return 'down';\n  }\n  return this.facing;\n};\n\nCharacter.prototype.moveUp = function () {\n  this.vel[1] = -1 * this.speed;\n  this.startMoving();\n};\n\nCharacter.prototype.stopMoveUp = function () {\n  this.vel[1] = 0;\n  this.stopMoving();\n};\n\nCharacter.prototype.moveDown = function () {\n  this.vel[1] = 1 * this.speed;\n  this.startMoving();\n};\n\nCharacter.prototype.stopMoveDown = function () {\n  this.vel[1] = 0;\n  this.stopMoving();\n};\n\nCharacter.prototype.moveRight = function () {\n  this.vel[0] = 1 * this.speed;\n  this.startMoving();\n};\n\nCharacter.prototype.stopMoveRight = function () {\n  this.vel[0] = 0;\n  this.stopMoving();\n};\n\nCharacter.prototype.moveLeft = function () {\n  this.vel[0] = -1 * this.speed;\n  this.startMoving();\n};\n\nCharacter.prototype.stopMoveLeft = function () {\n  this.vel[0] = 0;\n  this.stopMoving();\n};\n\nCharacter.prototype.dropBomb = function () {\n  if (this.activeBombs < this.numBombs) {\n    this.activeBombs += 1;\n    var bomb = new Bomb(this.getMapBombPos(this.pos), this.strength, this.gameMap);\n    this.gameMap.addBomb(bomb);\n    setTimeout( () => {\n      this.activeBombs -= 1;\n    }, 2000);\n  }\n};\n\n\nmodule.exports = Character;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/character.js\n ** module id = 7\n ** module chunks = 0\n **/","var Bomb = function (mapPos, strength, gameMap) {\n  this.mapPos = mapPos;\n  this.strength = strength;\n  this.gameMap = gameMap;\n\n  this.time = 0;\n  this.explodeTime = 2000;\n  this.refreshIntervalId = setInterval( ()=> {\n    this.time += 200;\n    if (this.frame === 4) {\n      this.frame = 0;\n    } else {\n      this.frame += 1;\n    }\n  }, 200 );\n  this.frame = 0;\n};\n\n\nBomb.prototype.explode = function () {\n  clearInterval(this.refreshIntervalId);\n  this.makeFlame();\n};\n\nBomb.prototype.makeFlame = function () {\n  this.flameRight();\n  this.flameLeft();\n  this.flameTop();\n  this.flameBottom();\n  this.gameMap.makeFlame(this.mapPos, 'center');\n};\n\nBomb.prototype.flameRight = function () {\n  for (var i = 0; i < this.strength; i++) {\n    let pos = [this.mapPos[0]+ 1 + i, this.mapPos[1]];\n    if (this.gameMap.isPath(pos)) {\n      let last = false;\n      if (i === this.strength - 1) {\n        last = true;\n      }\n      this.gameMap.makeFlame(pos, 'right', last);\n      // let bombId = this.gameMap.isBomb(pos);\n      // if (bombId) {\n      //   this.gameMap.removeBomb(bombId);\n      // }\n    } else if (this.gameMap.isBlock(pos)) {\n      this.gameMap.destroyBlock(pos);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameLeft = function () {\n\n  for (var i = 0; i < this.strength; i++) {\n    let pos = [this.mapPos[0] - 1 - i ,this.mapPos[1]];\n    if (this.gameMap.isPath(pos)) {\n      let last = false;\n      if (i === this.strength - 1) {\n        last = true;\n      }\n      this.gameMap.makeFlame(pos, 'left', last);\n\n    } else if (this.gameMap.isBlock(pos)) {\n      this.gameMap.destroyBlock(pos);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameTop = function () {\n\n  for (var i = 0; i < this.strength; i++) {\n    let pos = [this.mapPos[0], this.mapPos[1] - 1 - i];\n    if (this.gameMap.isPath(pos)) {\n      let last = false;\n      if (i === this.strength - 1) {\n        last = true;\n      }\n      this.gameMap.makeFlame(pos, 'top', last);\n\n    } else if (this.gameMap.isBlock(pos)) {\n      this.gameMap.destroyBlock(pos);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameBottom = function () {\n\n  for (var i = 0; i < this.strength; i++) {\n    let pos = [this.mapPos[0], this.mapPos[1] + 1 + i];\n    if (this.gameMap.isPath(pos)) {\n      let last = false;\n      if (i === this.strength - 1) {\n        last = true;\n      }\n      this.gameMap.makeFlame(pos, 'bottom', last);\n\n    } else if (this.gameMap.isBlock(pos)) {\n      this.gameMap.destroyBlock(pos);\n      break;\n    } else {\n      break;\n    }\n  }\n};\nmodule.exports = Bomb;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomb.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}