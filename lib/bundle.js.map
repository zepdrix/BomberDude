{"version":3,"sources":["webpack:///webpack/bootstrap 87b2ab83aa82be143f10","webpack:///./lib/bomberdude.js","webpack:///./lib/game.js","webpack:///./lib/gameview.js","webpack:///./lib/gamemap.js","webpack:///./lib/tile.js","webpack:///./lib/flame.js","webpack:///./lib/character.js","webpack:///./lib/bomb.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;ACjBD;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kBAAiB,QAAQ;AACzB;AACA,oBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,uBAAuB;AACxC,oBAAmB,0BAA0B;AAC7C;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,uBAAuB;AACxC,oBAAmB,0BAA0B;AAC7C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACRA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C,kBAAkB;AAChE;;;AAGA;AACA;AACA;;;;;;;;AAQA;;;;;;;ACpBA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;;AAGA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;AAIA;;;;;;;AChJA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C,kBAAkB;AAChE;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;;AAEpC;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 87b2ab83aa82be143f10\n **/","const Game = require(\"./game\");\nconst GameView = require('./gameview');\nconst GameMap = require(\"./gamemap\");\nvar canvasEl;\nvar ctx;\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\n  canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = GameMap.DIM_X;\n  canvasEl.height = GameMap.DIM_Y;\n  \n  ctx = canvasEl.getContext(\"2d\");\n  var map = new GameMap(ctx);\n  var view = new GameView(ctx, map);\n  view.start();\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomberdude.js\n ** module id = 0\n ** module chunks = 0\n **/","class Game {\n\n\n\n}\n\nGame.DIM_X = 1200;\nGame.DIM_Y = 900;\nGame.FPS = 32;\nGame.BG_COLOR = \"#CCCCCC\";\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var GameView = function (context, gameMap) {\n  this.context = context;\n  this.gameMap = gameMap;\n  this.character1 = this.gameMap.addCharacter1();\n  this.character2 = this.gameMap.addCharacter2();\n};\n\nGameView.prototype.bindKeyHandlers = function (character, character2) {\n  onkeydown = function (e) {\n    if (e.key ==='v') {\n      character.dropBomb();\n    }\n\n    if (e.key === 'w') {\n      character.moveUp();\n    }\n\n    if (e.key === 's') {\n      character.moveDown();\n    }\n\n    if (e.key === 'd') {\n      character.moveRight();\n    }\n\n    if (e.key === 'a') {\n      character.moveLeft();\n    }\n    if (e.key ==='p') {\n      character2.dropBomb();\n    }\n\n    if (e.key === 'i') {\n      character2.moveUp();\n    }\n\n    if (e.key === 'k') {\n      character2.moveDown();\n    }\n\n    if (e.key === 'l') {\n      character2.moveRight();\n    }\n\n    if (e.key === 'j') {\n      character2.moveLeft();\n    }\n\n  };\n  onkeyup = function (e) {\n    // if (e.key === 'a' || e.key === 'd') {\n    //   character.move([0,0]);\n    // }\n    if (e.key === 'w') {\n      character.stopMoveUp();\n    }\n    if (e.key === 's') {\n      character.stopMoveDown();\n    }\n    if (e.key === 'd') {\n      character.stopMoveRight();\n    }\n    if (e.key === 'a') {\n      character.stopMoveLeft();\n    }\n\n    if (e.key === 'i') {\n      character2.stopMoveUp();\n    }\n    if (e.key === 'k') {\n      character2.stopMoveDown();\n    }\n    if (e.key === 'l') {\n      character2.stopMoveRight();\n    }\n\n    if (e.key === 'j') {\n      character2.stopMoveLeft();\n    }\n\n  };\n};\n\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers(this.character1, this.character2);\n\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function (time) {\n  const timeDelta = time - this.lastTime;\n  this.gameMap.step(timeDelta);\n  this.gameMap.drawFrame(this.context);\n  this.lastTime = time;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\n\n\nGameView.MOVES1 = {\n  \"w\": [ 0, -1],\n  \"a\": [-1,  0],\n  \"s\": [ 0,  1],\n  \"d\": [ 1,  0],\n  \"v\": 'bomb',\n};\n\nGameView.MOVES2 = {\n  \"i\": [ 0, -1],\n  \"j\": [-1,  0],\n  \"k\": [ 0,  1],\n  \"l\": [ 1,  0],\n  \"p\": 'bomb'\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameview.js\n ** module id = 2\n ** module chunks = 0\n **/","const Tile = require('./tile');\nconst Flame = require('./flame');\nconst Character = require('./character');\nvar bombImage = new Image();\nbombImage.src = './img/bomb.png';\nvar bomber = new Image();\nbomber.src = './img/bomber.gif';\nvar bomber2 = new Image();\nbomber2.src = './img/bomber2.gif';\nvar tile = new Image();\ntile.src = './img/tile.png';\nvar wall = new Image();\nwall.src = './img/wall.png';\nvar flameImage = new Image();\nflameImage.src = './img/flame.gif';\nvar blockImage = new Image();\nblockImage.src = './img/block.png';\nvar flamePowerup = new Image();\nflamePowerup.src = './img/flamePowerup.png';\n\n\nvar GameMap = function () {\n  this.tiles = [];\n  this.characters = [];\n  this.tileSize = 16;\n  this.initialize();\n  this.generateBlocks();\n  this.bombs = [];\n  this.flames = [];\n  this.powerups = [];\n};\n\nGameMap.DIM_X = 1200;\n\nGameMap.DIM_Y = 900;\n\nGameMap.prototype.initialize = function () {\n  for (var i = 0; i < 13; i++) {\n    this.tiles.push([]);\n    for (var j = 0; j < 17; j++) {\n      if (i === 0 || j === 0 || i === 12 || j === 16) {\n\n        let wallTile = new Tile([j, i], 'wall');\n        this.tiles[i].push(wallTile);\n      } else if (i % 2 === 0 && j % 2 === 0) {\n\n        let wallTile = new Tile([j, i], 'wall');\n        this.tiles[i].push(wallTile);\n      } else {\n\n        let pathTile = new Tile([j, i]);\n        this.tiles[i].push(pathTile);\n      }\n\n    }\n  }\n};\n\nGameMap.prototype.step = function () {\n  this.characters.forEach( (character) => {\n    character.move();\n    // character.moveDown();\n  });\n};\n\nGameMap.prototype.addCharacter1 = function () {\n  var character1 = new Character([16, 16], this, 1);\n  this.characters.push(character1);\n  return character1;\n};\n\nGameMap.prototype.addCharacter2 = function () {\n  var character2 = new Character([240, 16], this, 2);\n  this.characters.push(character2);\n  return character2;\n};\n\nGameMap.prototype.addBomb = function (bomb) {\n  this.bombs.push(bomb);\n  console.log(this.bombs);\n};\n\nGameMap.prototype.renderBombs = function (ctx) {\n  this.bombs.forEach( (bomb, index) => {\n    if (bomb.time <= bomb.explodeTime) {\n      ctx.drawImage(bombImage, bomb.mapPos[0] * this.tileSize, bomb.mapPos[1] * this.tileSize);\n    } else {\n      this.removeBomb(index);\n    }\n  });\n};\n\nGameMap.prototype.renderFlames = function (ctx) {\n  this.flames.forEach( (flame, index) => {\n    if (flame.time <= flame.extinguishTime) {\n      ctx.drawImage(flameImage, flame.mapPos[0] * this.tileSize, flame.mapPos[1] * this.tileSize);\n    } else {\n      this.removeFlame(index);\n    }\n  });\n};\n\nGameMap.prototype.removeBomb = function (index) {\n  this.bombs[index].explode();\n  this.bombs.splice(index, 1);\n  console.log(this.bombs);\n};\n\nGameMap.prototype.renderMap = function (ctx) {\n  var size = 16;\n  let xCoord = 0;\n  let yCoord = 0;\n\n  for (var i = 0; i < this.tiles.length; i++) {\n    for (var j = 0; j < this.tiles[1].length; j++) {\n      if (this.tiles[i][j].type === 'wall') {\n        ctx.drawImage(wall, xCoord, yCoord);\n      } else if (this.tiles[i][j].type === 'block') {\n        ctx.drawImage(blockImage, xCoord, yCoord);\n      } else if (this.tiles[i][j].powerup === 'flame') {\n        ctx.drawImage(flamePowerup, xCoord, yCoord);\n      } else {\n        ctx.drawImage(tile, xCoord, yCoord);\n      }\n      xCoord += size;\n    }\n    yCoord += size;\n    xCoord = 0;\n  }\n};\n\nGameMap.prototype.isPath = function (pos) {\n  if (this.tiles[pos[0]][pos[1]].type === 'path') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nGameMap.prototype.isUnsafe = function (pos) {\n  return !this.tiles[pos[0]][pos[1]].safe;\n};\n\nGameMap.prototype.isBomb = function (pos) {\n  let posX = pos[0];\n  let posY = pos[1];\n  let isBomb;\n  this.bombs.forEach( (bomb, index) => {\n    let bombX = bomb.mapPos[0];\n    let bombY = bomb.mapPos[1];\n    if (posX === bombX && posY === bombY) {\n      isBomb = index;\n    }\n  });\n  return isBomb;\n};\n\nGameMap.prototype.isBlock = function (pos) {\n  return this.tiles[pos[0]][pos[1]].type === 'block';\n};\n\nGameMap.prototype.destroyBlock = function (pos) {\n  this.tiles[pos[0]][pos[1]].type = 'path';\n};\n\n\nGameMap.prototype.isLeftPathUnsafe = function (character) {\n  let mapLeftX = Math.floor((character.pos[0] - 1) / this.tileSize);\n  let mapY = Math.floor((character.pos[1] + (this.tileSize / 2)) / this.tileSize);\n  return this.isUnsafe([mapY, mapLeftX]);\n};\n\nGameMap.prototype.isRightPathUnsafe = function (character) {\n  let mapRightX = Math.floor((character.pos[0] + 1) / this.tileSize) + 1;\n  let mapY = Math.floor((character.pos[1] + (this.tileSize / 2)) / this.tileSize);\n  return this.isUnsafe([mapY, mapRightX]);\n};\n\nGameMap.prototype.isTopPathUnsafe = function (character) {\n  let mapX = Math.floor((character.pos[0] + (this.tileSize / 2)) / this.tileSize - 1) ;\n  let mapTopY = Math.floor((character.pos[1] - 1) / this.tileSize);\n  return this.isUnsafe([mapTopY, mapX]);\n};\n\nGameMap.prototype.isBottomPathUnsafe = function (character) {\n  let mapX = Math.floor((character.pos[0] + (this.tileSize / 2)) / this.tileSize);\n  let mapBottomY = Math.floor((character.pos[1] ) / this.tileSize) + 1;\n  return this.isUnsafe([mapBottomY, mapX]);\n};\n\n\n\nGameMap.prototype.renderCharacters = function (ctx) {\n  for (var i = 0; i < this.characters.length; i++) {\n    if (this.characters[i].playerNum === 1) {\n      ctx.drawImage(bomber, this.characters[i].pos[0], this.characters[i].pos[1]-12);\n    } else if (this.characters[i].playerNum === 2) {\n      ctx.drawImage(bomber, this.characters[i].pos[0], this.characters[i].pos[1]-12);\n    }\n  }\n};\n\nGameMap.prototype.makeFlame = function (pos) {\n  let gameTile = this.tiles[pos[1]][pos[0]];\n  gameTile.safe = false;\n  // console.log('makeflame');\n  // console.log(this.isBomb(pos));\n  // let id = this.isBomb(pos);\n  // if (this.isBomb(pos) > -1 && this.bombs[id]) {\n  //   setTimeout(this.removeBomb(id), 200);\n  // }\n\n  if (gameTile.type === 'block') {\n    if (gameTile.powerup === null) {\n      gameTile.type = 'path';\n    } else if (gameTile.type === 'flame') {\n\n    } else if (gameTile.type === 'bomb') {\n\n    }\n  } else if (gameTile.type === 'path' && gameTile.powerup !== null) {\n\n    console.log('destroy powerup');\n  }\n\n  let flame = new Flame(pos, this);\n  this.flames.push(flame);\n};\n\nGameMap.prototype.removeFlame = function (index) {\n  this.flames[index].extinguish();\n  this.tiles[this.flames[index].mapPos[1]][this.flames[index].mapPos[0]].safe = true;\n  this.flames.splice(index, 1);\n};\n\nGameMap.prototype.checkCharacter = function () {\n  this.characters.forEach( (character, index) => {\n    if (this.isTopPathUnsafe(character) || this.isRightPathUnsafe(character) ||\n    this.isBottomPathUnsafe(character) || this.isLeftPathUnsafe(character)) {\n      this.removeCharacter(index);\n    }\n    if (this.isTouchingPowerup(character, index)) {\n      this.removePowerup(index);\n    }\n  });\n};\n\nGameMap.prototype.removePowerup = function (index, pos = null) {\n  if (pos) {\n\n  }\n};\n\nGameMap.prototype.isTouchingPowerup = function (character) {\n\n};\n\nGameMap.prototype.removeCharacter = function (index) {\n  let character = this.characters[index];\n  if (character.lives > 0) {\n    character.lives -= 1;\n    this.respawnCharacter(character, index);\n  } else {\n\n    this.characters.splice(index, 1);\n  }\n};\n\nGameMap.prototype.respawnCharacter  = function (character, index) {\n  this.characters.splice(index, 1);\n  setTimeout( () => {\n    this.characters.push(character);\n  }, 1000);\n};\n\nGameMap.prototype.drawFrame = function (ctx) {\n  ctx.clearRect(0, 0, GameMap.DIM_X, GameMap.DIM_Y);\n  this.checkCharacter();\n  this.renderMap(ctx);\n  this.renderBombs(ctx);\n  this.renderFlames(ctx);\n  this.renderCharacters(ctx);\n};\n\nGameMap.prototype.generateBlocks = function () {\n  for (var i = 0; i < this.tiles.length; i++) {\n    for (var j = 0; j < this.tiles[i].length; j++) {\n      if ((i < 3 && j < 3) || (j > 13 && i < 3)) {\n        continue;\n      } else if (this.tiles[i][j].type === 'path' && Math.random() < 0.5){\n        this.tiles[i][j].type = 'block';\n        let randomNum = Math.random();\n        if (randomNum < 0.0) {\n          this.tiles[i][j].powerup = 'flame';\n        } else if (randomNum < 0.0) {\n          this.tiles[i][j].powerup = 'bomb';\n        }\n      }\n    }\n  }\n};\n\n\nmodule.exports = GameMap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gamemap.js\n ** module id = 3\n ** module chunks = 0\n **/","var Tile = function (pos, type = 'path') {\n  this.pos = pos;\n  this.type = type;\n  this.safe = true;\n  this.powerup = null;\n};\n\n\nmodule.exports = Tile;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/tile.js\n ** module id = 4\n ** module chunks = 0\n **/","var Flame = function (mapPos, gameMap) {\n  this.mapPos = mapPos;\n  this.gameMap = gameMap;\n\n  this.time = 0;\n  this.extinguishTime = 500;\n  this.refreshIntervalId = setInterval( ()=> {this.time += 100;}, 100 );\n};\n\n\nFlame.prototype.extinguish = function () {\n  clearInterval(this.refreshIntervalId);\n};\n\n\n\n\n\n\n\nmodule.exports = Flame;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/flame.js\n ** module id = 5\n ** module chunks = 0\n **/","const Bomb = require('./bomb');\n\nvar bomber = new Image();\nbomber.src = './img/bomber.gif';\n\n\n\nvar Character = function (pos, gameMap, playerNum) {\n  this.pos = pos;\n  this.gameMap = gameMap;\n  this.playerNum = playerNum;\n  this.lives = 3;\n  this.vel = [0,0];\n  this.strength = 2;\n  this.numBombs = 1;\n  this.moving = false;\n  this.facing = 'down';\n};\n\nCharacter.prototype.getMapPos = function () {\n  let mapX = Math.floor((this.pos[0] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n  let mapY = Math.floor((this.pos[1] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n  return [mapX, mapY];\n};\n\nCharacter.prototype.isLeftPathBlocked = function () {\n  let mapLeftX = Math.floor((this.pos[0] - 1) / this.gameMap.tileSize);\n  let mapY = Math.floor((this.pos[1] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n\n  if (this.gameMap.isPath([mapY, mapLeftX]) && !this.gameMap.isBomb([mapY, mapLeftX])) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isRightPathBlocked = function () {\n  let mapRightX = Math.floor((this.pos[0] + 1) / this.gameMap.tileSize) + 1;\n  let mapY = Math.floor((this.pos[1] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n\n  if (this.gameMap.isPath([mapY, mapRightX])) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isTopPathBlocked = function () {\n  let mapX = Math.floor((this.pos[0] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n  let mapTopY = Math.floor((this.pos[1] - 1) / this.gameMap.tileSize);\n\n  if (this.gameMap.isPath([mapTopY, mapX])) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.isBottomPathBlocked = function () {\n  let mapX = Math.floor((this.pos[0] + (this.gameMap.tileSize / 2)) / this.gameMap.tileSize);\n  let mapBottomY = Math.floor((this.pos[1] ) / this.gameMap.tileSize) + 1;\n\n  if (this.gameMap.isPath([mapBottomY, mapX])) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nCharacter.prototype.move = function (move) {\n  if (move === 'bomb') {\n    return this.dropBomb();\n  }\n\n  this.moving = true;\n\n\n  let currentPos = this.pos;\n  let futurePos;\n\n\n  if (this.isLeftPathBlocked() && this.vel[0] < 0) {\n    futurePos = [currentPos[0], currentPos[1] + this.vel[1]];\n  } else if (this.isRightPathBlocked() && this.vel[0] > 0) {\n    futurePos = [currentPos[0], currentPos[1] + this.vel[1]];\n  } else if (this.isTopPathBlocked() && this.vel[1] < 0) {\n    futurePos = [currentPos[0] + this.vel[0], currentPos[1]];\n  } else if (this.isBottomPathBlocked() && this.vel[1] > 0) {\n    futurePos = [currentPos[0] + this.vel[0], currentPos[1]];\n  } else {\n    futurePos = [currentPos[0] + this.vel[0], currentPos[1] + this.vel[1]];\n  }\n\n  this.pos = futurePos;\n};\n\nCharacter.prototype.moveUp = function () {\n  this.vel[1] = -1;\n  this.facing = 'up';\n};\n\nCharacter.prototype.stopMoveUp = function () {\n  this.vel[1] = 0;\n};\n\nCharacter.prototype.moveDown = function () {\n  this.vel[1] = 1;\n  this.facing = 'down';\n};\n\nCharacter.prototype.stopMoveDown = function () {\n  this.vel[1] = 0;\n};\n\nCharacter.prototype.moveRight = function () {\n  this.vel[0] = 1;\n  this.facing = 'right';\n};\n\nCharacter.prototype.stopMoveRight = function () {\n  this.vel[0] = 0;\n};\n\nCharacter.prototype.moveLeft = function () {\n  this.vel[0] = -1;\n  this.facing = 'left';\n};\n\nCharacter.prototype.stopMoveLeft = function () {\n  this.vel[0] = 0;\n};\n\nCharacter.prototype.dropBomb = function () {\n  var bomb = new Bomb(this.getMapPos(), this.strength, this.gameMap);\n  this.gameMap.addBomb(bomb);\n};\n\n\nCharacter.prototype.animate = function (direction) {\n\n};\n\n\n\nmodule.exports = Character;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/character.js\n ** module id = 6\n ** module chunks = 0\n **/","var Bomb = function (mapPos, strength, gameMap) {\n  this.mapPos = mapPos;\n  this.strength = strength;\n  this.gameMap = gameMap;\n\n  this.time = 0;\n  this.explodeTime = 2000;\n  this.refreshIntervalId = setInterval( ()=> {this.time += 100;}, 100 );\n};\n\n\nBomb.prototype.explode = function () {\n  // console.log('boom!');\n  clearInterval(this.refreshIntervalId);\n  this.makeFlame();\n};\n\nBomb.prototype.makeFlame = function () {\n  this.flameRight();\n  this.flameLeft();\n  this.flameTop();\n  this.flameBottom();\n  this.gameMap.makeFlame(this.mapPos);\n};\n\nBomb.prototype.flameRight = function () {\n  for (var i = 0; i < this.strength; i++) {\n    if (this.gameMap.isPath([this.mapPos[1],this.mapPos[0]+ 1 + i ])) {\n      this.gameMap.makeFlame([this.mapPos[0]+ 1 + i, this.mapPos[1] ]);\n    } else if (this.gameMap.isBlock([this.mapPos[1],this.mapPos[0]+ 1 + i ])) {\n      this.gameMap.destroyBlock([this.mapPos[1],this.mapPos[0]+ 1 + i ]);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameLeft = function () {\n  for (var i = 0; i < this.strength; i++) {\n    if (this.gameMap.isPath([this.mapPos[1],this.mapPos[0] - 1 - i ])) {\n      this.gameMap.makeFlame([this.mapPos[0] - 1 - i, this.mapPos[1] ]);\n    } else if (this.gameMap.isBlock([this.mapPos[1],this.mapPos[0] - 1 - i ])) {\n      this.gameMap.destroyBlock([this.mapPos[1],this.mapPos[0] - 1 - i ]);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameTop = function () {\n  for (var i = 0; i < this.strength; i++) {\n\n    if (this.gameMap.isPath([this.mapPos[1] -1-i ,this.mapPos[0]])) {\n      this.gameMap.makeFlame([this.mapPos[0], this.mapPos[1] - 1 - i ]);\n    } else if (this.gameMap.isBlock([this.mapPos[1] -1-i, this.mapPos[0] ])) {\n      this.gameMap.destroyBlock([this.mapPos[1] -1-i, this.mapPos[0] ]);\n      break;\n    } else {\n      break;\n    }\n  }\n};\n\nBomb.prototype.flameBottom = function () {\n  for (var i = 0; i < this.strength; i++) {\n    if (this.gameMap.isPath([this.mapPos[1] + 1 + i ,this.mapPos[0]])) {\n      this.gameMap.makeFlame([this.mapPos[0], this.mapPos[1] + 1 + i ]);\n    } else if (this.gameMap.isBlock([this.mapPos[1] + 1 + i ,this.mapPos[0]])) {\n      this.gameMap.destroyBlock([this.mapPos[1] + 1 + i ,this.mapPos[0]]);\n      break;\n    } else {\n      break;\n    }\n  }\n};\nmodule.exports = Bomb;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomb.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}